# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest
stages:
  - test
  - deploy
# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  # TODO bjuhasz: put these into GitLab as env. vars.
  # TODO bjuhasz: increase these numbers to 90 and "9.0", respectively.
  COVERAGE_FAIL_UNDER: 10
  PYLINT_FAIL_UNDER: "1.0"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install -r requirements.txt python-coveralls pylint pycodestyle

test:
  stage: test
  script:
    # TODO bjuhasz: use tox because "setup.py test" is deprecated:
    # https://setuptools.readthedocs.io/en/latest/setuptools.html#test-build-package-and-run-a-unittest-suite
    - coverage run --branch --source=pyega3 -m pytest
    - coverage report --fail-under=$COVERAGE_FAIL_UNDER
    - pylint --ignore=test/support --fail-under=$PYLINT_FAIL_UNDER pyega3/ test/
    - pycodestyle --show-source --show-pep8 --statistics --count --max-line-length=120 --exclude=test/support,.git,__pycache__
  # TODO bjuhasz: connect GitLab with coveralls.io:
  # - coveralls

deploy:
  stage: deploy
  only:
    - tags
    - master
  script:
    - python setup.py sdist
    - pip install twine
    - twine upload --username __token__ --password $PYPI_SECRET dist/*
