# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.11.6-slim
stages:
    - test
    - build
    - functional_test
    - release
# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
    paths:
        - .cache/pip

.tests:
    stage: test
    script:
        - python -V  # Print out python version for debugging
        - pip install -r requirements.txt
        - pip install python-coveralls
        - python -m coverage run -m pytest tests/unit
        - coverage report
        # Test that it can be started using the checked-out source code:
        - python -m pyega3.pyega3 --help
        # Test that it can be started using the installed package:
        - pip install -e . && pyega3 --help

test_python36:
    extends: .tests
    image: python:3.6

test_python37:
    extends: .tests
    image: python:3.7

test_python38:
    extends: .tests
    image: python:3.8

test_python39:
    extends: .tests
    image: python:3.9

test_python310:
    extends: .tests
    image: python:3.10

build_package:
    stage: build
    only:
        - tags
        - EE-2785_fix-package-job
    script:
        - pip install -r requirements.txt
        - python setup.py sdist
        - export PYEGA3_VERSION=$(cat pyega3/VERSION)
    artifacts:
        name: "pyega3-$PYEGA3_VERSION.tar.gz"
        paths:
            - dist/

functional_tests:
    stage: functional_test
    only:
        - tags
    except:
        - branches
    allow_failure: true
    script:
        - pip install pytest
        - export PYEGA3_VERSION=$(cat pyega3/VERSION)
        - pip install "dist/pyega3-$PYEGA3_VERSION.tar.gz"
        - pytest tests/functional

release:
    stage: release
    when: manual
    only:
        - tags
    except:
        - branches
    script:
        - python setup.py sdist
        - pip install twine
        - twine upload --username __token__ --password $PYPI_SECRET dist/*
